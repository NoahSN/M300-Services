# -*- mode: ruby -*-
# vi: set ft=ruby :
# encoding: UTF-8

Vagrant.configure("2") do |config|

    config.vm.box = "ubuntu/xenial64"
  
    # Erstellt eine weitergeleitete Portzuordnung, die den Zugriff auf einen bestimmten Port
    # innerhalb des Rechners von einem Port auf dem Hostrechner erlaubt
    # HINWEIS: Dadurch wird der oeffentliche Zugriff auf die geoeffneten Ports ermoeglicht
    config.vm.network "forwarded_port", guest:80, host:8080, auto_correct: true
    config.vm.network "forwarded_port", guest:8081, host:8081, auto_correct: true
    config.vm.network "forwarded_port", guest:8082, host:8082, auto_correct: true
    config.vm.network "forwarded_port", guest:3306, host:3306, auto_correct: true  
    for i in 32760..32780
      config.vm.network :forwarded_port, guest: i, host: i
    end
      
    # Erstellt ein privates Netzwerk, das nur den Host-Zugriff auf das Geraet erlaubt
    # Benutzt eine spezifische IP
    config.vm.hostname = "docker"
    config.vm.network "private_network", ip:"192.168.60.101"
        
    # Gibt einen zusaetzlichen Ordner fuer die Gast-VM frei
    # config.vm.synced_folder "../data", "/vagrant_data"
  
    config.vm.provider "virtualbox" do |vb|
       vb.memory = "2048"
    end
  
    # Docker Provisioner
    config.vm.provision "docker" do |d|
     d.pull_images "ubuntu:14.04"
    end
    
    # Terminal Befehle konfigurieren
    config.vm.provision "shell", inline: <<-SHELL
    # Updates durchlaufen lassen
    sudo apt-get update
    #U pgrades durchlaufen lassen    
    sudo apt-get upgrade
    # Docker-compose herunterladen und ausfuehrbar machen
    sudo curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose 
    SHELL
    end